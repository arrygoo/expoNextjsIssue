{"ast":null,"code":"\"use strict\";var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");var _classCallCheck2=_interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _possibleConstructorReturn2=_interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));var _getPrototypeOf2=_interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));var _assertThisInitialized2=_interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));var _createClass2=_interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));var _inherits2=_interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));var _toConsumableArray2=_interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));Object.defineProperty(exports,\"__esModule\",{value:true});var react_1=require(\"react\");var isServer=false;exports.default=function(){var mountedInstances=new Set();var state;function emitChange(component){state=component.props.reduceComponentsToState((0,_toConsumableArray2.default)(mountedInstances),component.props);if(component.props.handleStateChange){component.props.handleStateChange(state);}}return function(_react_1$Component){(0,_inherits2.default)(_class,_react_1$Component);(0,_createClass2.default)(_class,null,[{key:\"rewind\",value:function rewind(){var recordedState=state;state=undefined;mountedInstances.clear();return recordedState;}}]);function _class(props){var _this;(0,_classCallCheck2.default)(this,_class);_this=(0,_possibleConstructorReturn2.default)(this,(0,_getPrototypeOf2.default)(_class).call(this,props));if(isServer){mountedInstances.add((0,_assertThisInitialized2.default)(_this));emitChange((0,_assertThisInitialized2.default)(_this));}return _this;}(0,_createClass2.default)(_class,[{key:\"componentDidMount\",value:function componentDidMount(){mountedInstances.add(this);emitChange(this);}},{key:\"componentDidUpdate\",value:function componentDidUpdate(){emitChange(this);}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){mountedInstances.delete(this);emitChange(this);}},{key:\"render\",value:function render(){return null;}}]);return _class;}(react_1.Component);};","map":null,"metadata":{},"sourceType":"script"}